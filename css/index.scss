body {
    margin: 1.5em; // em is unit size relative to font size. so layout will scale well when changed
    font-family:'Ubuntu', sans-serif; // copy link from fonts.google and put in head html
}
a {
    text-decoration: none; // to remove underline on links
    font-size: 1.3rem; // rem is unit size relative to font size of root element 
}
.hero-img {
    position: absolute;
    top: 0;
    left: 0;
    background: url('../images/headerpicture.jpg');
    background-size: cover;
    background-position-x: 20%;
    background-position-y: 20%;
    width: 100%;
    height: 100vh; // percentage of image in viewport
    z-index: -1; // put the image behind element. can only use z-index with position absolute/fixed
    animation: introLoad 2s forwards; // for header picture
}
.logo {
    color: black;
    font-weight: bold;

    span {
        color: rgb(25, 47, 94);
    }
}
nav {
    position: fixed;
    right: 0;
    top: 0;
    background: white;
    height: 100vh;
    width: 50%;
    z-index: 2; // to ensure it goes on top of text
    text-transform: uppercase;
    transform: translateX(100%); // to close the nav (push 100% to the right)
    transition: transform .5s ease-in-out;

    ul{
        list-style-type: none; // to get rid of the point form
        padding: 0;
        margin-top: 8em;

        a {
            color: black;
            padding: .75em 2em; // will only work if display in block
            display: block;

            &:hover {
                background: rgb(190, 215, 241);
            }
        }
    }
    .closebutton {
        float: right;
        margin: 2em;
        width: 2.5em;
    }
}
header {
    display: flex;
    justify-content: space-between;

    svg {
        width: 2.5em;
        margin-top: -.6em;
        cursor: pointer;
    }
}
h1 {
    font-size: 4rem;
    margin-top: 3em;
    margin-bottom: .1em;
    line-height: 3.3rem; //paragraph spacing
}
.subhead {
    font-size: 1.4rem;
}
section.hero {
    color: white;
    height: 80vh;
    animation: moveDown 1s ease-in-out forwards; // forwards is so the animation only happen once
    opacity: 0; //initially hide it

    .downarrow {
        stroke: white;
        position: absolute;
        bottom: 9em;
        width: 1em;
        animation: moveArrow 1s alternate-reverse infinite;

        path {
            fill: white;
        }
    }
}
.info {
    img {
        width: 100%; //responsive
        object-fit: cover; //for image size
        height: 14em;
    }
    .title {
        color: black;
        font-weight: bold;
        font-size: 1.3rem;
    }
    .description {
        line-height: 1.5rem; //paragraph spacing
    }
}
footer {
    background: rgb(23, 44, 90);
    height: 15vh;
    padding-top: 10px;
    color: white;
}
.contact {
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 2.3rem 0 3rem 0;
}
.contact li {
    margin: 0 20px 20px 0;
}
.contact a {
    text-decoration: none;
    color: white;
}
.contact a i {
    font-size: 1.5rem;
}
.contact a:hover i {
    color: rgb(40, 198, 247);
}
.opennav { // when clicking hamburger menu
    transform: translateX(0%);
}
// use media query for responsive layout in tab/desktop
@media only screen and (min-width: 680px) { // when min screen width is 680px. see px value with dev tools
   
    body {
        margin: 1.5em; // top
    }
}
@media only screen and (min-width: 920px) {

    .menu {
        display: none; // hide it
    }
    nav {
        transform: translateX(0); // show the nav bar
        position: unset; // reset the property to its initial value
        display: block;
        width: auto;
        height: auto;
        background: none;

        .closebutton {
            display: none; // close button can be hidden in bigger screen now
        }
        ul {
            display: flex; // flex will put it in columns
            margin: 0;

            a {
                color: rgb(10, 24, 53);
                padding: .5em 1.5em;
                font-size: 1rem;

                &:hover {
                    background: none;
                    text-decoration: underline;
                }
            }
        }
    }
    .hero-img {
        left: unset;
        right: 0;
        width: 50%;
        height: 50em;
    }
    .logo {
        color: black;

        span {
            color: rgb(50, 92, 184);
        }
    }
    section.hero {
        color: black;
        height: auto;
        width: 40%;
        margin-bottom: 10em;

        .subhead {
            margin-bottom: 8em;
        }

        svg.downarrow {
            stroke: rgb(50, 92, 184);
            position: unset;

            path {
                fill: rgb(50, 92, 184);
            }
        }
    }
    .feature {
        display: grid;
        grid-template-columns: repeat(2, auto); // only works if you have display grid
        gap: 1.5em;
        margin-bottom: 3.5em;

        img {
            width: 25em;
        }
        .content {
            text-align: right;
            width: 25em;
        }
    }
    .feature.left {
        grid-template-areas: "left right";

        img {
            grid-area: left;
        }
        .content {
            text-align: left;
            width: 25em;
            justify-self: left;
        }
    }
}
@media only screen and (min-width: 1200px) {
    .wrapper {
        width: 1200px;
        margin: 0 auto;
    }
    .feature {
        gap: 0;
        margin-left: 8em;
    }
}
@keyframes introLoad {
     from { // google css clippy 
        clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
     }
     to {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
     }
}
@keyframes moveArrow {
    from {
        transform: translateY(-28px);
    }
    to {
        transform: translateY(0);
    }
}
@keyframes moveDown {
    from {
        transform: translateY(-100px);
    }
    to {
        transform: translateY(0);
        opacity: 1; //show it after animation
    }
}
